<%- include('../partials/header') %>
<div class="container">
  <div class="form-container">
    <img
      src="/profile_image.png"
      style="width: 50px; height: 50px"
      alt="profile_image"
    />
    <h1 class="form-title">Get started</h1>
    <p>Create your account now.</p>

    <div class="input-fields">
      <div class="input-group">
        <input id="name" type="text" placeholder="Enter your name" />
        <span id="name-error" class="error-message ml-50"></span>
      </div>

      <div class="input-group">
        <input id="email" type="email" placeholder="Enter your email" />
        <span id="email-error" class="error-message ml-50"></span>
      </div>

      <div class="input-group">
        <input
          id="password"
          type="password"
          placeholder="Enter your password"
        />
        <span id="password-error" class="error-message ml-50"></span>
      </div>

      <div class="input-group">
        <input
          id="confirm-password"
          type="password"
          placeholder="Confirm your password"
        />
        <span id="confirm-password-error" class="error-message ml-50"></span>
      </div>

      <div class="input-group upload-btn">
        <button id="upload-image-button" class="btn btn-upload">
          Upload Profile Image
        </button>
        <span id="image-error" class="error-message"></span>
      </div>

      <button id="register-button" class="btn btn-register">Register</button>
    </div>

    <div class="existing-user">
      <p>Existing user? <a href="/login">Login</a></p>
    </div>
  </div>
</div>
<%- include('../partials/footer') %>

<style>
  @import url("https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap");

  body {
    font-family: "Poppins", sans-serif;
    background: linear-gradient(120deg, #1d1c19 0%, #534642 100%);
    height: 100vh;
    margin: 0;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 1000px;
    animation: fadeIn 1s ease-in-out;
  }

  .form-container {
    background: #fff;
    padding: 2rem;
    border-radius: 15px;
    box-shadow: 0 15px 30px rgba(196, 143, 143, 0.1);
    width: 150%;
    max-width: 600px;
    text-align: center;
    position: relative;
    animation: slideUp 1.5s ease-in-out;
  }

  .form-title {
    font-size: 2rem;
    margin-bottom: 0.5rem;
    color: #333;
  }

  .input-fields {
    margin-bottom: 1.5rem;
  }

  .input-group {
    margin-bottom: 2rem;
    margin-right: 2rem;
    text-align: left;
    position: relative;
  }

  input[type="text"],
  input[type="email"],
  input[type="password"] {
    width: 100%;
    padding: 0.75rem;
    margin-top: 0.25rem;
    border: 1px solid #ddd;
    border-radius: 10px;
    font-size: 1rem;
    outline: none;
    transition: border-color 0.3s;
  }

  input:focus {
    border-color: #fda085;
  }

  .btn {
    width: 100%;
    padding: 0.75rem;
    font-size: 1rem;
    border: none;
    border-radius: 30px;
    cursor: pointer;
    transition: background-color 0.3s, transform 0.3s;
  }

  .btn-upload {
    width: 50%;
    background-color: #27210f;
    color: #fff;
    margin-bottom: 1rem;
  }

  .btn-register {
    background-color: #27210f;
    color: #fff;
  }

  .btn:hover {
    transform: scale(1.05);
  }

  .upload-btn {
    display: flex;
    justify-content: center;
  }
  .error-message {
    color: #d9534f;
    font-size: 0.675rem;
    position: absolute;
    top: 100%;
    left: 50;
  }

  .existing-user {
    font-size: 0.875rem;
    color: #666;
    margin-top: 1rem;
  }

  .existing-user a {
    color: #fda085;
    text-decoration: none;
    transition: color 0.3s;
  }

  .existing-user a:hover {
    color: #000000;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes slideUp {
    from {
      transform: translateY(50px);
    }
    to {
      transform: translateY(0);
    }
  }
</style>

<script src="https://upload-widget.cloudinary.com/global/all.js"></script>
<script>
  const nameInput = document.getElementById("name");
  const emailInput = document.getElementById("email");
  const passwordInput = document.getElementById("password");
  const confirmPasswordInput = document.getElementById("confirm-password");
  const uploadImageButton = document.getElementById("upload-image-button");

  const nameError = document.getElementById("name-error");
  const emailError = document.getElementById("email-error");
  const passwordError = document.getElementById("password-error");
  const confirmPasswordError = document.getElementById(
    "confirm-password-error"
  );
  const imageError = document.getElementById("image-error");

  let uploadedImageUrl = "";

  const uploadWidget = cloudinary.createUploadWidget(
    {
      cloudName: "dqjjysikb",
      uploadPreset: "gkrbyxgv",
    },
    (error, result) => {
      if (result.event === "success") {
        uploadedImageUrl = result.info.secure_url;
        console.log("Image uploaded:", uploadedImageUrl);
      }
      if (error) {
        console.error("Error uploading image:", error);
        imageError.textContent = "Error uploading image. Please try again.";
      }
    }
  );

  uploadImageButton.addEventListener("click", () => {
    uploadWidget.open();
  });

  function isValidEmail(email) {
    const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return re.test(email);
  }

  nameInput.addEventListener("blur", () => {
    const name = nameInput.value.trim();
    if (name === "") {
      nameError.textContent = "*Name is required.";
    } else {
      nameError.textContent = "";
    }
  });

  emailInput.addEventListener("blur", async () => {
    const email = emailInput.value.trim();
    emailError.textContent = "";

    if (email === "") {
      emailError.textContent = "*Email is required.";
      return;
    }

    if (!isValidEmail(email)) {
      emailError.textContent = "*Please enter a valid email address.";
      return;
    }

    try {
      const response = await fetch("/check-email", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ email }),
      });
      const result = await response.json();

      if (result.exists) {
        emailError.textContent = "*Email is already taken.";
      } else {
        emailError.textContent = "";
      }
    } catch (error) {
      console.error("Error checking email:", error);
      emailError.textContent = "Error checking email. Please try again later.";
    }
  });

  passwordInput.addEventListener("blur", () => {
    const password = passwordInput.value;
    passwordError.textContent = "";

    if (password === "") {
      passwordError.textContent = "*Password is required.";
      return;
    }

    if (password.length < 6) {
      passwordError.textContent =
        "*Password must be at least 6 characters long.";
      return;
    }
  });

  confirmPasswordInput.addEventListener("blur", () => {
    const password = passwordInput.value;
    const confirmPassword = confirmPasswordInput.value;
    confirmPasswordError.textContent = "";

    if (confirmPassword === "") {
      confirmPasswordError.textContent = "*Please confirm your password.";
      return;
    }

    if (password !== confirmPassword) {
      confirmPasswordError.textContent = "*Passwords do not match.";
    } else {
      confirmPasswordError.textContent = "";
    }
  });

  document
    .getElementById("register-button")
    .addEventListener("click", async (event) => {
      event.preventDefault();

      const name = nameInput.value.trim();
      const email = emailInput.value.trim();
      const password = passwordInput.value;
      const confirmPassword = confirmPasswordInput.value;

      let valid = true;

      if (name === "") {
        nameError.textContent = "*Name is required.";
        valid = false;
      } else {
        nameError.textContent = "";
      }

      if (email === "") {
        emailError.textContent = "*Email is required.";
        valid = false;
      } else if (!isValidEmail(email)) {
        emailError.textContent = "*Please enter a valid email address.";
        valid = false;
      } else {
        try {
          const response = await fetch("/check-email", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ email }),
          });
          const result = await response.json();

          if (result.exists) {
            emailError.textContent = "*Email is already taken.";
            valid = false;
          } else {
            emailError.textContent = "";
          }
        } catch (error) {
          console.error("Error checking email:", error);
          emailError.textContent =
            "Error checking email. Please try again later.";
          valid = false;
        }
      }

      if (password === "") {
        passwordError.textContent = "*Password is required.";
        valid = false;
      } else if (password.length < 6) {
        passwordError.textContent =
          "*Password must be at least 6 characters long.";
        valid = false;
      } else {
        passwordError.textContent = "";
      }

      if (confirmPassword === "") {
        confirmPasswordError.textContent = "*Please confirm your password.";
        valid = false;
      } else if (password !== confirmPassword) {
        confirmPasswordError.textContent = "*Passwords do not match.";
        valid = false;
      } else {
        confirmPasswordError.textContent = "";
      }

      if (!uploadedImageUrl) {
        imageError.textContent = "*Profile image is required.";
        valid = false;
      } else {
        imageError.textContent = "";
      }

      if (!valid) {
        return;
      }

      try {
        const registrationResponse = await fetch("/", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            name,
            email,
            password,
            profileImage: uploadedImageUrl,
          }),
        });

        if (registrationResponse.ok) {
          window.location.href = "/login";
        } else {
          alert("Registration failed. Please try again.");
        }
      } catch (error) {
        console.error("Error registering user:", error);
        alert("An error occurred during registration. Please try again later.");
      }
    });
</script>
